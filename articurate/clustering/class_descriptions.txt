class NewsItem: # class for each news item

    identifier = 0 # static id for each news item
    
    def __init__(self, title, feed_title, link, author, content, updated_at):
        
        # details from the internet
        self.title = title
        self.feed_title = feed_title
        self.link = link
        self.author = author
        self.content = content
        self.updated_at = updated_at

        # our representation
        self.tfidf_vector = []

        # our fields
        self.cluster_id = -1 # cluster id to which this item belongs
        self.distance_from_center = 0 # distance from cluster center
        self.id = self.identifier
        self.identifier = self.identifier + 1

        # extra metric fields
        self.num_ne = 0 # number of named entities


class ClusterObj: 

    """ This class describes a cluster

    Members:
    identifier: cluster id
    center: the mean of all cluster members
    closest_article: the member of cluster closest to the cluster center
    avg_pairwise_dist: average pairwise distance between articles in cluster
    articles_list: list of article ids that belong to cluster

    """

    def __init__(self, identifier, center, avg_pairwise_dist, closest_article, article_list):

        self.identifier = identifier
        self.center = center
        self.closest_article = closest_article
        self.article_list = article_list
        self.avg_pairwise_dist = avg_pairwise_dist

    def __str__(self):
        return "<identifier: %s, center: %s, closest_article: %s, avg_pairwise_dist: %s, article_list: %s>\n" % (self.identifier, self.center, self.closest_article, self.avg_pairwise_dist, self.article_list)    
      
             